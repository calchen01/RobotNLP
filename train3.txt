Come up with a list of ways of saying the R2D2’s commands in natural language.

All commands:
def connect_to_server(self, addr='127.0.0.1', port=1337, timeout=10):
def send_and_receive(self, command, wait=0, **kwargs):
def send_command(self, command, wait=0, _print=True):
def wait_for_response(self, _print=True, timeout=15):
def connect_to_droid(self, name):
def connect_to_R2D2(self):
def connect_to_R2Q5(self):
def connect_to_any(self):
def wake(self):
def sleep(self):
def set_stance(self, stance, **kwargs):
def setup_for_roll(self, angle):
def update_position_vector(self, speed, angle, time):
def roll_time(self, speed, angle, time, **kwargs):
def roll_continuous(self, speed, angle, **kwargs):
def restart_continuous_roll(self):
def animate(self, i, wait=3):
def set_waddle(self, waddle): # waddle = True/False
def rotate_head(self, angle):
def play_sound(self, soundID, wait=4):
def battery(self):
def app_version(self):
def help(self):
def quit(self):
def close(self):
def exit(self):
def enter_drive_mode(self):
def process_key(self, key, prev_speed, prev_angle, speed_interval=0.1, turn_interval=15):

Here’s some ones that I thought of:

Questions about the state of the droid:
What color is your front light?
What color is your back light?
What is your name? 
I want to call you “Artoo”.
What is your orientation?
What is your current heading?
How much battery do you have left?
What is your battery status?

Direction commands:
North is at heading 50 degrees.
Reset your heading to 0


There’s a storm trooper to your left! Run away from the storm trooper!

Set speed to be 0.
Set speed to be 20%
Increase your speed by 50%.

Go forward for 2 feet, then turn right.

Light commands:
def set_holo_projector_intensity(self, intensity):

Change the intensity on the holoemitter to maximum.
Turn off the holoemitter.
Dim your lights holoemitter.

def set_logic_display_intensity(self, intensity):
Blink your logic display.

def set_front_LED_color(self, r, g, b): # 0 <= r,g,b <= 255
def set_back_LED_color(self, r, g, b): # 0 <= r,g,b <= 255
Change the color on both LEDs to be x.
Set the RGB values on your lights to be 255, 0, 0.
Increase the blue value of your back LED by 50%.
Add 100 to the red value of your front LED.
Change the back LED to green.
Display the following colors for 2 seconds each: red, orange, yellow, green, blue, purple.
Turn off all your lights.
Lights out.


def scan(self, returnType = None):
What robots are nearby?
Do you have any friends around?
Are there any other droids nearby?

def disconnect(self):
I'm done.
You can go back to sleep now.
Disconnect.
Terminate the session.

def turn(self, angle, **kwargs):
Turn left.
Rotate left.
Turn 90 degrees counter-clockwise.

def turn(self, angle, **kwargs):
Turn right.
Rotate right.
Turn 90 degrees clockwise.

def roll(self, speed, angle, time):
Go straight.
Walk ahead.
Keep going.
Move forward.
Run away!
Start rolling forward.

def stop_roll(self, **kwargs):
Stop.
Watch out!
Brace for impact!



Black -> (0, 0, 0)
White -> (255, 255, 255)
Red -> (255, 0, 0)
Green -> (0, 255, 0)
Blue -> (0, 0, 255)
Yellow -> (255, 255, 0)
Orange -> (255, 165, 0)
Purple -> (128, 0, 128)
Pink -> (255, 192, 203)

Animations/sound
Fall over
Scream
Make some noise
Laugh 
Play an alarm 

Relationships on a grid:
You are on a 4 by 5 grid.
Each square is 1 foot large.
You are at position (0,0).
Go to position (3,3).
There is an obstacle at position 2,1.
There is a chair at position 3,3
Go to the left of the chair.
It’s not possible to go from 2,2 to 2,3.

IMU:
"Sphero robots contain a powerful Inertial Measurement Unit (IMU) used to stabilize the robot during navigation. The Sphero IMU contains an Accelerometer and Gyrometer which can be used as inputs to sense freefall, jumps, tricks, and human handling of the robot."

Collision Detection:
"Every Sphero robot contains a complex collision detection algorithm. Since this algorithm needs very high fidelity IMU data to correctly detect collisions and can be slightly different based on the robots mechanical design it has been implemented on the Robot instead of streaming the data back to the host device."

https://sdk.sphero.com/sdk-documentation/advanced-commands/
* streaming data
https://sdk.sphero.com/community-apis/javascript-sdk/